# Specify the minimum version for CMake

cmake_minimum_required(VERSION 2.8.10)
project(opennn)
find_package(HPX REQUIRED)
#target_include_directories(${PROJECT_NAME} PUBLIC ${HPX_INCLUDE_DIR})

# Project's name

add_hpx_library(opennn
	SOURCES adaptive_moment_estimation.cpp
		bounding_layer.cpp
		conjugate_gradient.cpp
		convolutional_layer.cpp 	
		correlations.cpp
		cross_entropy_error.cpp
		data_set.cpp
		functions.cpp
		genetic_algorithm.cpp
		gradient_descent.cpp
		growing_inputs.cpp
		incremental_neurons.cpp
		inputs_selection.cpp
		k_means.cpp
		layer.cpp
		learning_rate_algorithm.cpp
		levenberg_marquardt_algorithm.cpp
		long_short_term_memory_layer.cpp
		loss_index.cpp
		mean_squared_error.cpp
		metrics.cpp
		minkowski_error.cpp
		model_selection.cpp
		neural_network.cpp
		neurons_selection.cpp
		normalized_squared_error.cpp
		numerical_differentiation.cpp
		opennn_strings.cpp
		optimization_algorithm.cpp
		perceptron_layer.cpp
		pooling_layer.cpp
		principal_components_layer.cpp
		probabilistic_layer.cpp
		pruning_inputs.cpp
		quasi_newton_method.cpp
		recurrent_layer.cpp
		response_optimization.cpp
		scaling_layer.cpp
		statistics.cpp
		stochastic_gradient_descent.cpp
		sum_squared_error.cpp
		testing_analysis.cpp
		tinyxml2.cpp
		training_strategy.cpp
		transformations.cpp
		unit_testing.cpp
		unscaling_layer.cpp
		weighted_squared_error.cpp





	HEADERS adaptive_moment_estimation.hpp
		bounding_layer.hpp
		conjugate_gradient.hpp
		convolutional_layer.hpp 	
		correlations.hpp
		cross_entropy_error.hpp
		data_set.hpp
		functions.hpp
		genetic_algorithm.hpp
		gradient_descent.hpp
		growing_inputs.hpp
		incremental_neurons.hpp
		inputs_selection.hpp
		k_means.hpp
		layer.hpp
		learning_rate_algorithm.hpp
		levenberg_marquardt_algorithm.hpp
		long_short_term_memory_layer.hpp
		loss_index.hpp
		mean_squared_error.hpp
		metrics.hpp
		minkowski_error.hpp
		model_selection.hpp
		neural_network.hpp
		neurons_selection.hpp
		normalized_squared_error.hpp
		numerical_differentiation.hpp
		opennn_strings.hpp
		optimization_algorithm.hpp
		perceptron_layer.hpp
		pooling_layer.hpp
		principal_components_layer.hpp
		probabilistic_layer.hpp
		pruning_inputs.hpp
		quasi_newton_method.hpp
		recurrent_layer.hpp
		response_optimization.hpp
		scaling_layer.hpp
		statistics.hpp
		stochastic_gradient_descent.hpp
		sum_squared_error.hpp
		testing_analysis.hpp
		tinyxml2.hpp
		training_strategy.hpp
		transformations.hpp
		unit_testing.hpp
		unscaling_layer.hpp
		weighted_squared_error.hpp
		

	COMPONENT_DEPENDENCIES iostreams)

#target_link_libraries(${PROJECT_NAME} PUBLIC "${HPX_LIBRARIES}")
